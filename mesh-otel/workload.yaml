# Using seed: 1694115100

---
apiVersion: v1
kind: Namespace
metadata:
  name: kuma-test
  labels:
   kuma.io/sidecar-injection: enabled

---
apiVersion: kuma.io/v1alpha1
kind: Mesh
metadata:
  name: default
spec:
  metrics:
    backends:
    - conf:
        path: /metrics
        port: 5670
        tags:
          kuma.io/service: dataplane-metrics
      name: prometheus-1
      type: prometheus
    enabledBackend: prometheus-1
  mtls:
    backends:
    - name: ca-1
      type: builtin
    enabledBackend: ca-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kuma-test
  name: "fake-client"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "fake-client"
  template:
    metadata:
      labels:
        app: "fake-client" 
      annotations:
        kuma.io/mesh: default
        kuma.io/transparent-proxying-reachable-services: "srv-000_kuma-test_svc_80"
    spec:
      containers:
        - name: client
          image: buoyantio/slow_cooker:1.3.0
          args: ["-qps", "1", "-concurrency", "10", "http://srv-000_kuma-test_svc_80.mesh:80"]
          resources:
            limits:
              memory: "32Mi"
              cpu: "200m"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: srv-000
  namespace: kuma-test
  labels:
    app: srv-000
spec:
  replicas: 1
  selector:
    matchLabels:
      app: srv-000
  serviceName: srv-000
  template:
    metadata:
      labels:
        app: srv-000
      annotations:
        kuma.io/mesh: default
        kuma.io/transparent-proxying-reachable-services: "srv-001_kuma-test_svc_80"
    spec:
      containers:
        - name: service
          image: nicholasjackson/fake-service:v0.25.2
          ports:
            - containerPort: 9090
          env:
            - name: SERVICE
              value: "srv-000"
            - name: UPSTREAM_URIS
              value: "http://srv-001_kuma-test_svc_80.mesh:80"
          resources:
            limits:
              memory: "32Mi"
              cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: srv-000
  namespace: kuma-test
  annotations:
spec:
  selector:
    app: srv-000
  ports:
    - protocol: TCP
      appProtocol: http
      port: 80
      targetPort: 9090
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: srv-001
  namespace: kuma-test
  labels:
    app: srv-001
spec:
  replicas: 1
  selector:
    matchLabels:
      app: srv-001
  serviceName: srv-001
  template:
    metadata:
      labels:
        app: srv-001
      annotations:
        kuma.io/mesh: default
        kuma.io/transparent-proxying-reachable-services: "srv-002_kuma-test_svc_80,srv-003_kuma-test_svc_80"
    spec:
      containers:
        - name: service
          image: nicholasjackson/fake-service:v0.25.2
          ports:
            - containerPort: 9090
          env:
            - name: SERVICE
              value: "srv-001"
            - name: UPSTREAM_URIS
              value: "http://srv-002_kuma-test_svc_80.mesh:80,http://srv-003_kuma-test_svc_80.mesh:80"
          resources:
            limits:
              memory: "32Mi"
              cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: srv-001
  namespace: kuma-test
  annotations:
spec:
  selector:
    app: srv-001
  ports:
    - protocol: TCP
      appProtocol: http
      port: 80
      targetPort: 9090
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: srv-002
  namespace: kuma-test
  labels:
    app: srv-002
spec:
  replicas: 1
  selector:
    matchLabels:
      app: srv-002
  serviceName: srv-002
  template:
    metadata:
      labels:
        app: srv-002
      annotations:
        kuma.io/mesh: default
        kuma.io/transparent-proxying-reachable-services: "srv-003_kuma-test_svc_80"
    spec:
      containers:
        - name: service
          image: nicholasjackson/fake-service:v0.25.2
          ports:
            - containerPort: 9090
          env:
            - name: SERVICE
              value: "srv-002"
            - name: UPSTREAM_URIS
              value: "http://srv-003_kuma-test_svc_80.mesh:80"
          resources:
            limits:
              memory: "32Mi"
              cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: srv-002
  namespace: kuma-test
  annotations:
spec:
  selector:
    app: srv-002
  ports:
    - protocol: TCP
      appProtocol: http
      port: 80
      targetPort: 9090
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: srv-003
  namespace: kuma-test
  labels:
    app: srv-003
spec:
  replicas: 1
  selector:
    matchLabels:
      app: srv-003
  serviceName: srv-003
  template:
    metadata:
      labels:
        app: srv-003
      annotations:
        kuma.io/mesh: default
        kuma.io/transparent-proxying-reachable-services: "non-existing-service"
    spec:
      containers:
        - name: service
          image: nicholasjackson/fake-service:v0.25.2
          ports:
            - containerPort: 9090
          env:
            - name: SERVICE
              value: "srv-003"
            - name: UPSTREAM_URIS
              value: ""
          resources:
            limits:
              memory: "32Mi"
              cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: srv-003
  namespace: kuma-test
  annotations:
spec:
  selector:
    app: srv-003
  ports:
    - protocol: TCP
      appProtocol: http
      port: 80
      targetPort: 9090
