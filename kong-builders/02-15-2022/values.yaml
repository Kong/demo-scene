admin:
  # Enable creating a Kubernetes service for the admin API
  # Disabling this is recommended for most ingress controller configurations
  # Enterprise users that wish to use Kong Manager with the controller should enable this
  enabled: true
  type: LoadBalancer
  # To specify annotations or labels for the admin service, add them to the respective
  # "annotations" or "labels" dictionaries below.
  annotations: {}
  #  service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
  labels: {}

  http:
    # Enable plaintext HTTP listen for the admin API
    # Disabling this and using a TLS listen only is recommended for most configuration
    enabled: true
    servicePort: 8001
    containerPort: 8001
    # Set a nodePort which is available if service type is NodePort
    # nodePort: 32080
    # Additional listen parameters, e.g. "reuseport", "backlog=16384"
    parameters: []

  tls:
    # Enable HTTPS listen for the admin API
    enabled: false
    servicePort: 8444
    containerPort: 8444
    # Set a target port for the TLS port in the admin API service, useful when using TLS
    # termination on an ELB.
    # overrideServiceTargetPort: 8000
    # Set a nodePort which is available if service type is NodePort
    # nodePort: 32443
    # Additional listen parameters, e.g. "reuseport", "backlog=16384"
    parameters:
      - http2
  # Kong admin ingress settings. Useful if you want to expose the Admin
  # API of Kong outside the k8s cluster.
  ingress:
    # Enable/disable exposure using ingress.
    enabled: true
    ingressClassName: kong
    # TLS secret name.
    # tls: kong-admin.example.com-tls
    # Ingress hostname
    hostname: admin.kongproxy.me
    # Map of ingress annotations.
    annotations:
      external-dns.alpha.kubernetes.io/hostname: admin.kongproxy.me
      
    # Ingress path.
    path: /

image:
  repository: kong/kong-gateway
  tag: "2.7"
  # Kong Enterprise
  # repository: kong/kong-gateway
  # tag: "2.7.0.0-alpine"

  pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## If using the official Kong Enterprise registry above, you MUST provide a secret.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistrKeySecretName
    
env:
  #database: "off"
  database: "postgres"
  pg_user: "kong"
  pg_password: "kong"
  pg_database: "kong"
  ph_host: "kong-postgresql"
  admin_api_uri: "http://admin.kongproxy.me"
  admin_gui_url: "http://manager.kongproxy.me"
  #admin_gui_url: "http://34.139.235.182:8002/"
  
manager:
  # Enable creating a Kubernetes service for Kong Manager
  enabled: true
  type: LoadBalancer
  # To specify annotations or labels for the Manager service, add them to the respective
  # "annotations" or "labels" dictionaries below.
  annotations: {}
  #  service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
  labels: {}

  http:
    # Enable plaintext HTTP listen for Kong Manager
    enabled: true
    servicePort: 8002
    containerPort: 8002
    # Set a nodePort which is available if service type is NodePort
    # nodePort: 32080
    # Additional listen parameters, e.g. "reuseport", "backlog=16384"
    parameters: []

  tls:
    # Enable HTTPS listen for Kong Manager
    enabled: false
    servicePort: 8445
    containerPort: 8445
    # Set a nodePort which is available if service type is NodePort
    # nodePort: 32443
    # Additional listen parameters, e.g. "reuseport", "backlog=16384"
    parameters:
      - http2

  ingress:
    # Enable/disable exposure using ingress.
    enabled: true
    ingressClassName: kong
    # TLS secret name.
    # tls: kong-proxy.example.com-tls
    # Ingress hostname
    hostname: manager.kongproxy.me
    # Map of ingress annotations.
    annotations:
      external-dns.alpha.kubernetes.io/hostname: manager.kongproxy.me
    # Ingress path.
    path: /
    
enterprise:
  enabled: true
  license_secret: kong-enterprise-license
  vitals:
    enabled: true
    
# PostgreSQL chart documentation:
# https://github.com/bitnami/charts/blob/master/bitnami/postgresql/README.md

postgresql:
  enabled: true
  postgresqlUsername: kong
  postgresqlDatabase: kong
  postgresqlPassword: kong  
  # service:
  #   port: 5432