plugins {
  id 'org.springframework.boot' version '3.0.4'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.graalvm.buildtools.native' version '0.9.20'  
  id 'java'
  id 'idea'
  id 'net.researchgate.release' version '2.8.1'
  id 'com.google.protobuf' version '0.8.18'
  id 'com.gorylenko.gradle-git-properties' version '2.4.1'
}

group = 'io.kong.developer'
sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  maven { url 'https://repo.spring.io/snapshot' }
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation "net.datafaker:datafaker:1.8.0"
  implementation 'io.dekorate:kubernetes-spring-starter:2.9.3'
  annotationProcessor 'io.dekorate:kubernetes-annotations:2.9.3'

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'

  //grpc stuff
  implementation("net.devh:grpc-server-spring-boot-starter:2.14.0.RELEASE") {
    exclude(module: "grpc-netty-shaded", group: "io.grpc")
  }

  implementation "jakarta.annotation:jakarta.annotation-api:1.3.5"
  implementation 'com.google.protobuf:protobuf-java:3.21.7'
  implementation 'io.grpc:grpc-stub:1.53.0'
  implementation 'io.grpc:grpc-netty:1.53.0'

  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'io.projectreactor:reactor-test'
}

test {
  useJUnitPlatform()
}

release {
  git {
    requireBranch = 'main'
  }
}

protobuf {

  //generatedFilesBaseDir = "$buildDir/generated-main-proto-java"

  // Configure the protoc executable
  protoc {
    // Download from repositories
    artifact = 'com.google.protobuf:protoc:3.21.7'
  }
  plugins {
    grpc {
      artifact = 'io.grpc:protoc-gen-grpc-java:1.53.0'
    }
  }
  generateProtoTasks {
    all()*.plugins { grpc {} }
  }
}

sourceSets {
  main {
    java {
      srcDirs 'build/generated/source/proto/main/grpc'
      srcDirs 'build/generated/source/proto/main/java'
    }
  }
}

springBoot {
  buildInfo()
}

bootBuildImage {
  builder = 'dashaun/builder:tiny'
  environment = ['BP_NATIVE_IMAGE': 'true']
  imageName = "gamussa/native-quote-service:0.0.5-SNAPSHOT"
  verboseLogging = true
}
  
  